{{- if not .Values.application.initializeCommand -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  annotations:
    {{ if .Values.gitlab.app }}app.gitlab.com/app: {{ .Values.gitlab.app | quote }}{{ end }}
    {{ if .Values.gitlab.env }}app.gitlab.com/env: {{ .Values.gitlab.env | quote }}{{ end }}
  labels:
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
{{ include "sharedlabels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "appname" . }}
      track: "{{ .Values.application.track }}"
      tier: "{{ .Values.application.tier }}"
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
{{- if .Values.strategyType }}
  strategy:
    type: {{ .Values.strategyType | quote }}
{{- end }}
  template:
    metadata:
      annotations:
        checksum/application-secrets: "{{ .Values.application.secretChecksum }}"
        {{ if .Values.gitlab.app }}app.gitlab.com/app: {{ .Values.gitlab.app | quote }}{{ end }}
        {{ if .Values.gitlab.env }}app.gitlab.com/env: {{ .Values.gitlab.env | quote }}{{ end }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
{{ include "sharedlabels" . | indent 8 }}
    spec:
{{- if or (.Values.serviceAccount.name) (.Values.serviceAccountName) }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Values.serviceAccountName | quote }}
{{- end }}
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 10 }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.application.initContainerCommand }}
      initContainers:
        - name: init-command
          image: {{ template "imagename" . }}
          command: [ 'sh', '-c', {{ .Values.application.initContainerCommand }} ]
          envFrom:
            - secretRef:
                name: {{ .Values.application.secretName }}
          env:
            - name: APP_ENV
              value: "ci"
            - name: DB_HOST
              value: {{ template "appname" . }}-db
            - name: BROADCAST_DRIVER
              value: "null"
            - name: QUEUE_CONNECTION
              value: sync
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "imagename" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.application.secretName }}
        envFrom:
        - secretRef:
            name: {{ .Values.application.secretName }}
        {{- end }}
        env:
        - name: APP_DEPLOYMENT_DATE
          value: {{ now | date "2006-01-02T15:04:05Z" }}
        - name: APP_ENV
          value: {{ .Values.gitlab.envName | quote }}
        - name: APP_URL
          value: {{ .Values.gitlab.envURL | quote }}
        - name: PRO_DOMAIN
          value: {{ .Values.gitlab.envURL | replace "://" "://pro." | quote }}
        - name: API_DOMAIN
          value: {{ .Values.gitlab.envURL | replace "://" "://api." | quote }}
        - name: API_URL
          value: {{ .Values.gitlab.envURL | replace "://" "://api." | quote }}
        - name: NOVA_DOMAIN_NAME
          value: {{ .Values.gitlab.envURL | replace "://" "://admin." | quote }}
        - name: SESSION_DOMAIN
          value: {{ .Values.gitlab.envURL | replace "https://" "." | quote }}
        - name: SANCTUM_STATEFUL_DOMAINS
          value: {{ .Values.gitlab.envURL | replace "https://" "*." | quote }}
        - name: REDIS_HOST
          value: {{ template "appname" . }}-redis-master
        - name: CACHE_DRIVER
          value: redis
        - name: QUEUE_CONNECTION
          value: redis
        - name: DB_HOST
          value: {{ template "appname" . }}-db
{{- if .Values.lifecycle }}
        lifecycle:
{{ toYaml .Values.lifecycle | indent 10 }}
{{- end }}
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end -}}
